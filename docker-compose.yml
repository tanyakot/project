
version: '3'
services:
  database:
    container_name: database
    image: mysql:8.0
    command: --default-authentication-plugin=mysql_native_password
    environment:
      MYSQL_ROOT_PASSWORD: secret
      MYSQL_DATABASE: symfony_docker
      MYSQL_USER: symfony
      MYSQL_PASSWORD: symfony
    ports:
      - '4306:3306'
    volumes:
      - ./mysql:/var/lib/mysql

  rabbitmq:
    container_name: "rabbitmq-3.8"
    image: library/rabbitmq:3.8-management
    restart: always
    hostname: localhost
    ports:
      - 5672:15672
#      - 15672:15672
#    volumes:
#      - ./rabbitmq/etc/:/etc/rabbitmq/
#      - ./rabbitmq/data/:/var/lib/rabbitmq/
#      - ./rabbitmq/logs/:/var/log/rabbitmq/
#    environment:
#      - RABBITMQ_DEFAULT_USER=guest
#      - RABBITMQ_DEFAULT_PASS=guest
#      - RABBITMQ_NODENAME=rabbitnode@localhost
#      - RABBITMQ_USER=rabbit
#      - RABBITMQ_PASSWORD=rabbit
#volumes:
#  rabbitmq:

#  db:
#    image: mysql:8
#    restart: always
#    environment:
#      MYSQL_DATABASE: test
#      MYSQL_USER: root
#      MYSQL_ROOT_PASSWORD: 11111
##      MYSQL_ALLOW_EMPTY_PASSWORD: "yes"
#    ports:
#      - "5432:3306"
#    volumes:
#      - "./docker/volumes/mysql:/var/lib/mysql"
#  php:
#    image: webdevops/php-dev:7.3
#    container_name: blog-php
#    volumes:
#      - "./:/app"
#      - "~/.composer:/root/.composer"
#    working_dir: '/app'
#    ports:
#      - "8000:8000"
#  nginx:
#    depends_on:
#      - php
#    image: webdevops/nginx
#    environment:
#      WEB_DOCUMENT_ROOT: /app/public
#      WEB_DOCUMENT_INDEX: index.php
#      WEB_PHP_SOCKET: php:9000
#    volumes:
#      - "./:/app"
#    ports:
#      - "80:80"











#version: '3'
#
#services:
####> doctrine/doctrine-bundle ###
#  database:
#    image: mysql:8-alpine
#    environment:
#      POSTGRES_DB: test
#      # You should definitely change the password in production
#      POSTGRES_PASSWORD: test
#      POSTGRES_USER: test
#    volumes:
#      - db-data:/var/lib/postgresql/data:rw
#      # You may use a bind-mounted host directory instead, so that it is harder to accidentally remove the volume and lose all your data!
#      # - ./docker/db/data:/var/lib/postgresql/data:rw
####< doctrine/doctrine-bundle ###
#
#volumes:
####> doctrine/doctrine-bundle ###
#  db-data:
####< doctrine/doctrine-bundle ###
